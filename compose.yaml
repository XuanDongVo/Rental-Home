services:
  database:
    image: postgis/postgis:15-3.5-alpine
    container_name: database
    env_file:
      - ./server/.env.production
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rental-network
    restart: unless-stopped

  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: rental-server
    env_file:
      - ./server/.env.production
    environment:
      - NODE_ENV=production
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rental-network
    restart: unless-stopped

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: rental-client
    env_file:
      - ./client/.env.production
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rental-network
    restart: unless-stopped

networks:
  rental-network:
    driver: bridge

volumes:
  db_data:
